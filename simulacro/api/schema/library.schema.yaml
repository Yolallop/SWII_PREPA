openapi: 3.0.3
info:
  description: |-
    My Library documentation
  version: 1.0.0
  title: Library
tags:
  - name: book
    description: Everything about your Books
paths:
  /book:
    get:
      summary: GET all books
      description: GET all books
      parameters:
      - name: year
        in: query
        required: false
        description: Filtra por año
      responses:
        "200":
          description: "OK"
          content:
             application/json:
              schema: 
                $ref: '#/components/schemas/Books'
        "422":
        description: Parámetro inválido (por ejemplo, year no numérico)
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "El parámetro 'year' debe ser numérico"


    post:
      tags:
        - book
      summary: Add a new book to the library
      description: Creates and stores a new book
      operationId: addBook
      requestBody:
        required: true
        description: JSON data to create a new book
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
            example:
              titulo: "1984"
              author: "George Orwell"
              year: 1949
      responses:
        '201':
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid input data (missing or incorrect fields)
        '500':
          description: Internal server error


  /book/{bookId}:
    parameters:
      - $ref: '#/components/parameters/ID'
    get:
      tags:
        - book
      summary: Find book by ID
      description: Returns a single book
      operationId: getBookById
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Book'
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid ID supplied
        '404':
          description: Book not found
    put:
      tags:
        - book
      summary: Update a book by ID
      description: Updates the title, author or year of an existing book
      operationId: updateBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid book ID or request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "ID no válido o datos incorrectos"
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Libro no encontrado"
        '500':
          description: Internal server error

    delete:
        tags:
          - book
        summary: Deletes a book
        description: Deletes a book by its ID
        operationId: deleteBook
        responses:
          '200':
            description: Book deleted successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Libro eliminado correctamente
          '400':
            description: Invalid book ID format
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: ID no válido
          '404':
            description: Book not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: Libro no encontrado
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: Error interno del servidor
  components:
  parameters:
    ID:
      description: Book ID
      name: bookId
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/ID"
  schemas:
    Books:
      type: object
      properties:
        results:
          $ref: "#/components/schemas/BooksArray"
        next:
          type: string
          description: Book next ID for pagination search
      required:
        - results
        - next
    BooksArray:
      type: array
      items:
        $ref: "#/components/schemas/BookMin"
    BookMin:
      type: object
      properties:
        _id:
          $ref: "#/components/schemas/ID"
        title:
          type: string
          description: Book title
        author:
          type: string
          description: Book author
      required:
        - _id
        - title
        - author
        - link
    Book:
      type: object
      properties:
        titulo:
          type: string
          example: "1984"
        author:
          type: string
          example: "George Orwell"
        year:
          type: integer
          example: 1949
      required:
        - titulo
        - author
    ID:
      type: string
      description: Book ID obtained from the database
      example: 6463448ae7684d03f44af30f
servers:
  - url: localhost:3011/api/v2